{
  "_comment": "Archivo de configuración unificado para modules_captions",
  "_instructions": "Este archivo contiene todas las configuraciones necesarias para diferentes proveedores de IA",
  
  "root_directory": "/ruta/a/tus/imagenes",
  "db_path": "captions.db",
  "provider": "gemini",
  "api_key": null,
  
  
  "log_directory": "logs",
  "commit_interval": 10,
  "log_level": 20,
  
  "prompt": " Describe detalladamente la imagen en español con un estilo profesional y claro. La descripción se utilizará como contexto en un sistema RAG, por lo que debe ser precisa, relevante y útil para comprender la imagen incluso sin verla. Limita la respuesta a un máximo de 512 tokens. \n Resume la imagen según estas categorías, solo si aplican: \n Texto:  Extrae el título principal y hasta 3 ideas clave del contenido textual visible. Omite detalles superfluos. \n Mapas:  Identifica la región o país principal, y menciona hasta 3 ubicaciones clave, rutas o elementos geográficos destacados. \n Diagramas o esquemas:  Explica brevemente el concepto o proceso representado, incluyendo relaciones importantes entre elementos. \n Logos:  Nombra la entidad representada y describe los rasgos distintivos del logotipo (forma, colores, texto, íconos). \n Gráficas o datos visuales:  Señala los 2-3 datos más relevantes, tendencias o contrastes notables que permitan comprender rápidamente el mensaje. \n Mantén un lenguaje profesional y conciso. Evita redundancias, especulaciones o interpretaciones personales. Prioriza siempre la utilidad de la descripción como contexto adicional en un sistema de recuperación de información.",
  
  "providers": {
    "openai": {
      "client_config": {
        "model": "gpt-4o",
        "max_tokens": 256,
        "temperature": 0.6,
        "top_p": 0.6,
        "base_url": null
      },
      "env_var": "OPENAI_API_KEY",
      "rate_limits": {
        "requests_per_minute": 500,
        "tokens_per_minute": 100000,
        "requests_per_day": null
      }
    },
    
    "gemini": {
      "client_config": {
        "model": "gemini-2.0-flash",
        "max_tokens": 256,
        "temperature": 0.6,
        "top_p": 0.6,
        "base_url": "https://generativelanguage.googleapis.com/v1beta/openai"
      },
      "env_var": "GEMINI_API_KEY",
      "rate_limits": {
        "requests_per_minute": 15,
        "tokens_per_minute": 1000000,
        "requests_per_day": 1500
      }
    },
    
    "claude": {
      "client_config": {
        "model": "claude-sonnet-4-20250514",
        "max_tokens": 256,
        "temperature": 0.6,
        "top_p": 0.6,
        "base_url": "https://api.anthropic.com/v1/"
      },
      "env_var": "ANTHROPIC_API_KEY",
      "rate_limits": {
        "requests_per_minute": 50,
        "tokens_per_minute": 20000,
        "requests_per_day": null
      }
    },
    
    "ollama": {
      "client_config": {
        "model": "llama3.2-vision",
        "max_tokens": 256,
        "temperature": 0.6,
        "top_p": 0.6,
        "base_url": "http://localhost:11434/v1"
      },
      "env_var": null,
      "rate_limits": {
        "requests_per_minute": null,
        "tokens_per_minute": null,
        "requests_per_day": null
      }
    },
    
    "azure": {
      "client_config": {
        "model": "gpt-4-vision",
        "max_tokens": 256,
        "temperature": 0.6,
        "top_p": 0.6,
        "base_url": "https://your-resource.openai.azure.com/"
      },
      "env_var": "AZURE_OPENAI_API_KEY",
      "rate_limits": {
        "requests_per_minute": 500,
        "tokens_per_minute": 100000,
        "requests_per_day": null
      }
    }
  },
  
  "_configuration_notes": {
    "root_dir": "Root directory containing images to process",
    "db_path": "Path to SQLite database file (will be created if it doesn't exist)",
    "provider": "Proveedor de IA: 'openai', 'gemini', 'claude', 'ollama', 'azure'",
    "api_key": "Clave API (null para usar variable de entorno)",
    
    "log_level": "Nivel de logging: 10=DEBUG, 20=INFO, 30=WARNING, 40=ERROR",
    "providers": "Specific configurations for each AI provider"
  },
  
  "_environment_variables": {
    "OPENAI_API_KEY": "Clave API de OpenAI",
    "GEMINI_API_KEY": "Clave API de Google Gemini",
    "ANTHROPIC_API_KEY": "Clave API de Anthropic Claude",
    "AZURE_OPENAI_API_KEY": "Clave API de Azure OpenAI"
  },
  
  "_usage_examples": {
    "basic_openai": "python extract_captions.py --openai --root-dir /path/to/images",
    "basic_gemini": "python extract_captions.py --gemini --root-dir /path/to/images",
    "basic_claude": "python extract_captions.py --claude --root-dir /path/to/images",
    "basic_ollama": "python extract_captions.py --ollama --root-dir /path/to/images",
    "basic_azure": "python extract_captions.py --azure --root-dir /path/to/images",
    "with_custom_settings": "python extract_captions.py --openai"
  }
}